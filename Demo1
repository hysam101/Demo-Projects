import java.util.*;
import java.lang.StringBuilder;

public class main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//int[] example2array = new int[] {2,7,11,15};
		int temp = 654321;
		
			//example1(16);
			//System.out.println(Arrays.toString(example2(example2array, 9)));
			//example3("hello");
			//example4();
			example5(temp);
		
		/*
		newStack newStack = new newStack(5);
		newStack.push2(3);
		newStack.push2(7);
		newStack.push2(4);
		newStack.printStack();
		
		System.out.println(newStack.pop2());
		System.out.println(newStack.pop2());
		System.out.println(newStack.peak2());
		System.out.println(newStack.peak2());
		*/
		}
	
	public static void example1(int n) {
		
		for(int i = 1; i < n; i++) {
			if((i % 3 == 0)&&(i % 5 == 0)) 
				System.out.println( "FizzBuzz");
			else if ((i % 3 == 0)) 
				System.out.println("Buzz");
			else if ((i % 5 == 0))
				System.out.println("fizz");
			else
				System.out.println(i);
		}

	}
	
	public static int[] example2(int[] list, int target){
		int[] solution = new int[] {0,0};
		int delta = 0;
		Map<Integer,Integer> visitedNumbers = new HashMap<>();
		
		for(int i = 0; i < list.length; i++) {
			delta = target - list[i];	
			
				if (visitedNumbers.containsKey(delta)) {
					return new int[] {i, visitedNumbers.get(delta)};
				}
				visitedNumbers.put(list[i], i);
			}
		
		/*
		for(int i = 0; i < list.length; i++) {
			for(int j = 1; j < list.length; j++) {
			
				if((list[i] + list[j] == target)){
					solution[0] = i;
					solution[1]= j;
					
					System.out.println( Arrays.toString(solution));
					return list;
				}
				
			}
		}
		*/
		
		return solution;
	}
	
	public static String example3(String word){
		StringBuilder newString = new StringBuilder(word);
	
		System.out.println(newString.reverse().toString());
		return newString.reverse().toString();
	/*	 char[] wordArray = word.toCharArray();
		char[] newWordArray= new char[wordArray.length];
		String newWord = "error";
		
		for(int i = 0; i < wordArray.length; i++) {
			newWordArray[i] = wordArray[wordArray.length-1-i];
		}
		
		newWord = Arrays.toString(newWordArray);
		System.out.println(newWord);
		return newWord;
		*/
	} 
	
	public static int example5(int number) {
		int remainder = 0;
		int reverseNumber= 0;
		
	
		while(number !=0) {
			remainder= number%10;
			number = number/10;
			reverseNumber = reverseNumber*10 + (remainder);
		}
			System.out.println(reverseNumber);	
		return reverseNumber;
	}
}


